(namespace (read-msg 'ns))

(module merkle GOVERNANCE
    (defcap GOVERNANCE () true)

    ;  (defcap GOVERNANCE ()
    ;      "makes sure only admin account can update the smart contract"
    ;      (enforce-guard (at 'guard (coin.details "opact-deployer")))
    ;  )

    (defschema FilledSubtreesSchema
        "Schema for the filledSubtrees table"
        value:integer)
      
    (defschema RootsSchema
        "Schema for the roots table"
        value:integer)

    (defschema StateSchema
        "Schema for the config table"
        current_root_index:integer
        next_index:integer
    )
      
    (deftable filledSubtrees:{FilledSubtreesSchema})
    (deftable roots:{RootsSchema})
    (deftable state:{StateSchema})

    (defun get-current-root-index ()
        (at 'current_root_index (read state "0")))
    
    (defun get-next-index ()
        (at 'next_index (read state "0")))

    (defun set-current-root-index (current_root_index:integer)
        (update state "0" {"current_root_index": current_root_index}))
    
    (defun set-next-index (next_index:integer)
        (update state "0" {"next_index": next_index}))

    (defun set-filled-subtrees (key:string value:integer)
        (write filledSubtrees key { "value": value }))

    (defun insert-root (key:string value:integer)
        (write roots key { "value": value }))

    (defun blake-hash (left:string right:string)
        (hash [left right]))

    (defun initialize()
        <% for (let i = 0; i < level; i++) { %>
            (set-filled-subtrees "<%= i %>" (poseidon-zeros <%= i %>))
        <% } %>

        (insert-root "0" (poseidon-zeros 0))

        (insert state "0" {
            "current_root_index": 0,
            "next_index": 0
        })
    )

    (defun reset()
        <% for (let i = 0; i < level; i++) { %>
            (set-filled-subtrees "<%= i %>" (poseidon-zeros <%= i %>))
        <% } %>

        (insert-root "0" (poseidon-zeros 0))

        (write state "0" {
            "current_root_index": 0,
            "next_index": 0
        })
    )

    (defun blake-zeros (i:integer)
        (if (= i 0)
            "gU2Q4_mob4UQ6u3w7mAh9vts0iI3_pSIQUEzl2dPXKo" ; (hash "0") zeroElement
            (if (= i 1)
                "Il1ocCVlKjmfq4tniMxSaMdTAwof1Damh7g1SZsFd1E" ; (hash (+ "gU2Q4_mob4UQ6u3w7mAh9vts0iI3_pSIQUEzl2dPXKo" "gU2Q4_mob4UQ6u3w7mAh9vts0iI3_pSIQUEzl2dPXKo"))
                (if (= i 2)
                    "Br5EWetygPF7ePyxUz8J6V2txrCR_xwSDalTWmGvOfI" ; (hash (+ "Il1ocCVlKjmfq4tniMxSaMdTAwof1Damh7g1SZsFd1E" "Il1ocCVlKjmfq4tniMxSaMdTAwof1Damh7g1SZsFd1E"))
                    ""
                )
            )  
        )
    )

    (defun poseidon-zeros (i:integer)
        (if (= i 0)
            19014214495641488759237505126948346942972912379615652741039992445865937985820 ; (hash "0") zeroElement
            (if (= i 1)
                10447686833432518214645507207530993719569269870494442919228205482093666444588 ; (hash (+ "19014214495641488759237505126948346942972912379615652741039992445865937985820" "19014214495641488759237505126948346942972912379615652741039992445865937985820"))
                (if (= i 2)
                    2186774891605521484511138647132707263205739024356090574223746683689524510919 ; (hash (+ "10447686833432518214645507207530993719569269870494442919228205482093666444588" "10447686833432518214645507207530993719569269870494442919228205482093666444588"))
                    (if (= i 3)
                        6624528458765032300068640025753348171674863396263322163275160878496476761795
                        (if (= i 4)
                            17621094343163687115133447910975434564869602694443155644084608475290066932181
                            (if (= i 5)
                                21545791430054675679721663567345713395464273214026699272957697111075114407152
                                (if (= i 6)
                                    792508374812064496349952600148548816899123600522533230070209098983274365937
                                    (if (= i 7)
                                        19099089739310512670052334354801295180468996808740953306205199022348496584760
                                        (if (= i 8)
                                            1343295825314773980905176364810862207662071643483131058898955641727916222615
                                            (if (= i 9)
                                                16899046943457659513232595988635409932880678645111808262227296196974010078534
                                                (if (= i 10)
                                                    4978389689432283653287395535267662892150042177938506928108984372770188067714
                                                    (if (= i 11)
                                                        9761894086225021818188968785206790816885919715075386907160173350566467311501
                                                        (if (= i 12)
                                                            13558719211472510351154804954267502807430687253403060703311957777648054137517
                                                            (if (= i 13)
                                                                15093063772197360439942670764347374738539884999170539844715519374005555450641
                                                                (if (= i 14)
                                                                    8536725160056600348017064378079921187897118401199171112659606555966521727181
                                                                    (if (= i 15)
                                                                        17731960725993409205647629535433695139708451502526773527161126281730851312303
                                                                        (if (= i 16)
                                                                            12378336118662422402312038713508977861617293534645772054906298430730335052258
                                                                            (if (= i 17)
                                                                                15746370922467144378022955960137552273962623515478055069197781668972427980569
                                                                                (if (= i 18)
                                                                                    12833304663529859056360652781553170470307618587436982477441419650866727735640
                                                                                    (if (= i 19)
                                                                                        19675769322130325405595465035336399585577759990829087793049230689392015057069
                                                                                        (if (= i 20)
                                                                                            20460142462285856218765860898052067672306981225120697436392828593803361495377
                                                                                            (if (= i 21)
                                                                                                1942429939665438243642882743222215597996755330878238278454825452269798788659
                                                                                                (if (= i 22)
                                                                                                    3680120961298734454556264424276743339847269018642429207242435412350006451141
                                                                                                    (if (= i 23)
                                                                                                        17355733648944254784716965955209881109394425269146540067736115686834449561815
                                                                                                        (if (= i 24)
                                                                                                            7814425154102164661924206185851966203709420761102601320266162949469822497631
                                                                                                            (if (= i 25)
                                                                                                                20500940315674828709940203301795070113483112804555517947060811444629615490886
                                                                                                                (if (= i 26)
                                                                                                                    12943513298019549814669382523773192352531310057962994442623921531591290970586
                                                                                                                    (if (= i 27)
                                                                                                                        9463184482936435911705007425526132250967847301066197135590479391265638556562
                                                                                                                        (if (= i 28)
                                                                                                                            16532470416046677990694259805372275394047147822061768800965480071549373561346
                                                                                                                            (if (= i 29)
                                                                                                                                6881547692304206611837169059928209217064150439977546062638353296618744427535
                                                                                                                                (if (= i 30)
                                                                                                                                    11311817982268587140804034457558811604681102050619457785272093068988798070016
                                                                                                                                    (if (= i 31)
                                                                                                                                        6098629282112318983356928234184677637049116404036076847941175648853529936605
                                                                                                                                        ""
                                                                                                                                    )
                                                                                                                                )
                                                                                                                            )
                                                                                                                        )
                                                                                                                    )
                                                                                                                )
                                                                                                            )
                                                                                                        )
                                                                                                    )
                                                                                                )
                                                                                            )
                                                                                        )
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )  
        )
    )

    (defun is-known-root (root:integer)
        (
            let*
            (
                (root_value (length (select roots (where 'value (= root)))))
            )
            (= root_value 1)
        )
    )

    (defun insert-leaf (leaf:integer)
        (
            let*
            (
                (root-history-size 30)
                (next-index (get-next-index))
                (current-index next-index)
                (current-level-hash leaf)
                (hashes [])

                <% for (let i = 1; i <= level; i++) { %>
                    (filled-subtrees (at 'value (read filledSubtrees "<%= i - 1 %>")))

                    (lr_<%= i %> (if (= (mod current-index 2) 0)
                        {"left": current-level-hash, "right": (poseidon-zeros <%= i - 1 %>)}
                        {"left": filled-subtrees, "right": current-level-hash}
                    ))

                    (hashes (+ hashes (if (= (mod current-index 2) 0)
                        [current-level-hash]
                        [(poseidon-zeros <%= i - 1 %>)])
                    ))

                    (current-level-hash (poseidon-hash (at 'left lr_<%= i %>) (at 'right lr_<%= i %>)))

                    (current-index (/ current-index 2))
                <% } %>

                (current-root-index (at 'current_root_index (read state "0")))
                (new-root-global-index (+ current-root-index 1))
                (new-root-history-index (mod new-root-global-index root-history-size))
                (root-history-index (int-to-str 10 new-root-history-index))
            )
            (insert-root root-history-index current-level-hash)
            (set-current-root-index new-root-global-index)
            (set-next-index (+ next-index 1))
        <% for (let i = 0; i < level; i++) { %>
            (if (= (at <%= i %> hashes) (poseidon-zeros <%= i %>))
                ""
                (set-filled-subtrees "<%= i %>" (at <%= i %> hashes))
            )
        <% } %>
        {
            "root": current-level-hash,
            "index": new-root-global-index
        })
    )
)

(create-table roots)
(create-table filledSubtrees)
(create-table state)
(initialize)